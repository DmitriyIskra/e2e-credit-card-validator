{"version":3,"file":"index.js","mappings":"mBAKmB,ICLJ,MACXA,YAAYC,EAAeC,EAAUC,GACjCC,KAAKC,OAASJ,EACdG,KAAKE,SAAWJ,EAChBE,KAAKG,OAASJ,CAClB,CAEAK,iBACIJ,KAAKC,OAAOI,OAAOC,iBAAiB,QAASN,KAAKO,cAAcC,KAAKR,OACrEA,KAAKC,OAAOQ,MAAMH,iBAAiB,QAASN,KAAKU,oBAAoBF,KAAKR,OAC1EA,KAAKC,OAAOQ,MAAMH,iBAAiB,QAASN,KAAKW,eAAeH,KAAKR,MACzE,CAGAO,cAAcK,GACVA,EAAEC,iBAEF,MAAMC,EAAQd,KAAKC,OAAOc,WAE1B,IAAIC,EAAahB,KAAKG,OAAOc,UAAUH,GAEpCE,GACChB,KAAKC,OAAOiB,gBAAgBF,EAEpC,CAGAN,sBACI,IAAII,EAAQd,KAAKC,OAAOc,YAGc,IAAnCf,KAAKC,OAAOkB,YAAYL,KACvBA,EAAQd,KAAKC,OAAOmB,MAAMN,GAC1Bd,KAAKC,OAAOQ,MAAMK,MAAQA,EAElC,CAEAH,iBAGwB,IAFRX,KAAKC,OAAOc,WAEfM,QACLrB,KAAKC,OAAOqB,YAEpB,GDtC8B,IELnB,MACX1B,YAAY2B,GACW,iBAAV,IACLvB,KAAKC,OAASuB,SAASC,cAAcF,IAGzCvB,KAAK0B,WAAa1B,KAAKC,OAAO0B,iBAAiB,0BAC/C3B,KAAKS,MAAQT,KAAKC,OAAOwB,cAAc,uBACvCzB,KAAKK,OAASL,KAAKC,OAAOwB,cAAc,wBACxCzB,KAAK4B,aAAe,KACpB5B,KAAK6B,aAAe,IACxB,CAGAT,MAAMN,GAKF,OAJAA,EAAQA,EAAMgB,MAAM,KAEdC,MAECjB,EAAMkB,KAAK,GACtB,CAGAjB,WACI,OAAOf,KAAKS,MAAMK,KACtB,CAGAK,YAAYL,GAIR,GADAA,GAFAA,EAAQA,EAAMgB,MAAM,KAENhB,EAAMO,OAAS,GAC1BY,MAAMC,SAASpB,IACd,OAAO,CAEf,CAGAI,gBAAgBJ,GACZd,KAAK6B,aAAef,EAEpB,IAAK,IAAIqB,EAAI,EAAGA,EAAInC,KAAK0B,WAAWL,OAAQc,GAAK,EAC1CnC,KAAK0B,WAAWS,GAAGC,QAAQ,qBAAqBtB,OACnDd,KAAK0B,WAAWS,GAAGE,UAAUC,IAAI,GAAGxB,YAEpCd,KAAK4B,aAAe5B,KAAK0B,WAAWS,GAG5C,CAGAb,aACOtB,KAAK4B,cACJ5B,KAAK4B,aAAaS,UAAUE,OAAO,GAAGvC,KAAK6B,sBAEnD,GFlDgD,WAAY,IGLjD,MAEXW,MAAMC,GAEN,CAEAC,YAAYD,GAEZ,GHH4E,IILjE,MACX7C,cACII,KAAK2C,QAAU,CAAC,MAAO,mBAAoB,OAAQ,cACvD,CAIA1B,UAAUH,GAGN,IAAI2B,GAFJ3B,EAAQA,EAAMgB,MAAM,KAEJc,QAEhB,IAAIH,GAAM,IAAMA,GAAO,EACnB,OAAOzC,KAAK2C,SAASF,EAAM,EAEnC,IJROrC,gB","sources":["webpack://e2e-credit-card-validator/./src/app/app.js","webpack://e2e-credit-card-validator/./src/app/AppControl.js","webpack://e2e-credit-card-validator/./src/app/WidgetControl.js","webpack://e2e-credit-card-validator/./src/app/validate.js","webpack://e2e-credit-card-validator/./src/app/whose-system.js"],"sourcesContent":["import WidgetControl from \"./WidgetControl\";\r\nimport Validate from \"./validate\";\r\nimport System from \"./whose-system\";\r\nimport AppControl from \"./AppControl\";\r\n\r\nconst appControl = new AppControl(new WidgetControl('.widget'), new Validate(), new System());\r\n\r\nappControl.registerEvents();\r\n\r\n\r\n\r\n\r\n// VISA\r\n// 4716429952877957\r\n// 4539967046718534\r\n// 4539447607773004912\r\n\r\n// MasterCard\r\n// 5332746695675807\r\n// 5178453007440551\r\n// 2221002977000863\r\n\r\n// American Express (AMEX)\r\n// 371685320743577\r\n// 343271340635583\r\n// 373662485182865","export default class AppControl {\r\n    constructor(WidgetControl, Validate, System) {\r\n        this.widget = WidgetControl;\r\n        this.validate = Validate;\r\n        this.system = System;\r\n    }\r\n\r\n    registerEvents() {\r\n        this.widget.button.addEventListener('click', this.clickValidate.bind(this));\r\n        this.widget.input.addEventListener('input', this.validateOnlyNumbers.bind(this));\r\n        this.widget.input.addEventListener('input', this.resetIconsCard.bind(this));\r\n    } \r\n   \r\n    // действия по клику на кнопку\r\n    clickValidate(e) {\r\n        e.preventDefault();\r\n\r\n        const value = this.widget.getValue();\r\n\r\n        let typeSystem = this.system.getSystem(value);\r\n\r\n        if(typeSystem) {\r\n            this.widget.renderPaySystem(typeSystem)\r\n        }\r\n    }\r\n\r\n    // проверка крайнего символа при вводе на цифру \r\n    validateOnlyNumbers() {\r\n        let value = this.widget.getValue();\r\n\r\n        // Проверяем является ли крайнее введенное значение цифрой\r\n        if(this.widget.onlyNumbers(value) === false) {\r\n            value = this.widget.clear(value);\r\n            this.widget.input.value = value;\r\n        }\r\n    }\r\n\r\n    resetIconsCard() {\r\n        let value = this.widget.getValue();\r\n\r\n        if(value.length === 0) {\r\n            this.widget.clearCards();\r\n        }\r\n    }\r\n}","export default class WidgetControl {\r\n    constructor(str) {\r\n        if(typeof(str) === 'string') {\r\n            this.widget = document.querySelector(str);\r\n        }\r\n        \r\n        this.iconsCards = this.widget.querySelectorAll('.widget__card-img-item');\r\n        this.input = this.widget.querySelector('.widget__form-input');\r\n        this.button = this.widget.querySelector('.widget__form-button');\r\n        this.lastCardIcon = null;\r\n        this.lastTypeCard = null;\r\n    }\r\n\r\n    // Убирает крайний символ если он не цифра и возвращает чистую строку\r\n    clear(value) {\r\n        value = value.split('');\r\n\r\n        value.pop();\r\n\r\n        return value.join('');\r\n    }\r\n\r\n    // возвращает введенное значение\r\n    getValue() {\r\n        return this.input.value;\r\n    }\r\n\r\n    // проверяет цифра введена  или нет\r\n    onlyNumbers(value) {\r\n        value = value.split('');\r\n\r\n        value = value[value.length - 1];\r\n        if(isNaN(parseInt(value))) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    // Подсвечивает систему оплаты\r\n    renderPaySystem(value) {\r\n        this.lastTypeCard = value;\r\n\r\n        for( let i = 0; i < this.iconsCards.length; i += 1) {\r\n            if(this.iconsCards[i].matches(`.widget__card-img-${value}`)) {\r\n            this.iconsCards[i].classList.add(`${value}_active`);\r\n\r\n            this.lastCardIcon = this.iconsCards[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    // Убирает подсветку системы оплаты если данные в поле были полностью стерты\r\n    clearCards() {\r\n        if(this.lastCardIcon) {\r\n            this.lastCardIcon.classList.remove(`${this.lastTypeCard}_active`);\r\n        }\r\n    }\r\n}","export default class Validate {\r\n    \r\n    clean(num) {\r\n\r\n    }\r\n\r\n    validateNum(num) {\r\n\r\n    }\r\n\r\n}","export default class System {\r\n    constructor() {\r\n        this.systems = ['mir', 'american-express', 'visa', 'master-card'];\r\n    }\r\n\r\n  \r\n    // Возвращаем строку с системой соответственно индексу, индекс соответствует принятому стандарту соотношения цифры к системе оплаты\r\n    getSystem(value) {\r\n        value = value.split('');\r\n\r\n        let num = value.shift();\r\n\r\n        if(+num >=2 && +num <= 5) {\r\n            return this.systems[+num - 2];\r\n        }\r\n    }\r\n}"],"names":["constructor","WidgetControl","Validate","System","this","widget","validate","system","registerEvents","button","addEventListener","clickValidate","bind","input","validateOnlyNumbers","resetIconsCard","e","preventDefault","value","getValue","typeSystem","getSystem","renderPaySystem","onlyNumbers","clear","length","clearCards","str","document","querySelector","iconsCards","querySelectorAll","lastCardIcon","lastTypeCard","split","pop","join","isNaN","parseInt","i","matches","classList","add","remove","clean","num","validateNum","systems","shift"],"sourceRoot":""}